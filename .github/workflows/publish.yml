name: Publish

on:
  push:
    branches: [ master ]

jobs:
  homepage:
    runs-on: ubuntu-latest 

    steps:   
    - uses: actions/checkout@master
    - run: mkdir ./site  
    - run: 'echo -e "---\nlayout: default\ntitle: Home\n---\n" > ./site/index.md'
    - run: 'echo "$(sed -r s"/(\{%[^%]+%\})/{% raw %}\1{% endraw %}/g" ./README.md)" >> ./site/index.md'
    - uses: actions/upload-artifact@v1
      with:
        name: site
        path: ./site

  demo:
    runs-on: ubuntu-latest 

    steps:   
    - uses: actions/checkout@master
    - run: 'mkdir -p ./site/_includes && touch ./site/demo.md && touch ./site/_includes/demo-menu.html'
    - run: 'php ./scripts/generateDemoFromDocumentationTestConfigs.php ./site/demo.md ./site/_includes/demo-menu.html'
    - uses: actions/upload-artifact@v1
      with:
        name: site
        path: ./site

  
  phpdoc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@master #https://github.com/shivammathur/setup-php
        with:
          php-version: 7.4

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - run: composer global require clean/phpdoc-md
      - run: 'mkdir -p ./site/phpdoc
      - run: |
        echo -e `<?php
        return (object)[
            'rootNamespace' => 'TwbsHelper', 
            'destDirectory' => './site/phpdoc',
            'format' => 'github',
            'classes' => [
                '\TwbsHelper\*'
            ],
        ];`
      - run: phpdoc-md
          
  build_and_deploy:
    runs-on: ubuntu-latest
    needs: [homepage, demo, phpdoc]
    steps: 
      - uses: actions/download-artifact@v1
        with:
          name: site
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          enable_jekyll: true
          keep_files: true
          

